name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: "1.13"
              otp: "24.3.4.10"
          - pair:
              elixir: "1.17"
              otp: "27.0.1"
            lint: lint
            coverage: coverage
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: req_sandbox_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}

      - uses: actions/cache@v2
        id: cache-deps
        with:
          path: deps
          key: mix-${{ runner.os }}-${{matrix.pair.elixir}}-${{matrix.pair.otp}}-${{ hashFiles('**/mix.lock') }}

      - run: mix do deps.get, deps.compile
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - run: mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - run: mix test
        if: ${{!matrix.coverage}}

      - run: mix test --cover
        if: ${{matrix.coverage}}

      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: cover
        if: ${{matrix.coverage}}
